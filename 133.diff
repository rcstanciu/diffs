  Sour Cobalt Tardigrade
  
  high
  
  # Missing Access Control for Contract Owner Functions (No Modifier + Unauthorized Calls)
  
- ## Summary
+ ## Summary
?           +
- The functions like setBaseURI, setRoyaltyInfo, activateContract, and pauseContract lack access control checks. This allows any user to call them, potentially compromising the contract configuration and causing unintended consequences.
+ The functions like setBaseURI, setRoyaltyInfo, activateContract, and pauseContract lack access control checks. This allows any user to call them, potentially compromising the contract configuration and causing unintended consequences.
?                                                                                                                                                                                                                                           +
- ## Vulnerability Detail
+ ## Vulnerability Detail
?                        +
- The contract owner functions are supposed to be only callable by the owner address, which is set by the OwnableUpgradeable contract. However, these functions do not have the onlyOwner modifier, which checks that the caller is the owner. This means that any user can call these functions and change the contract state, such as the base URI, the royalty info, or the paused status. This could lead to malicious or accidental changes that could affect the functionality and security of the contract.
+ The contract owner functions are supposed to be only callable by the owner address, which is set by the OwnableUpgradeable contract. However, these functions do not have the onlyOwner modifier, which checks that the caller is the owner. This means that any user can call these functions and change the contract state, such as the base URI, the royalty info, or the paused status. This could lead to malicious or accidental changes that could affect the functionality and security of the contract.
?                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 +
- ## Impact
+ ## Impact
?          +
- The missing access control could result in unauthorized changes to the contract configuration, which could cause loss of funds, data, or reputation for the users and the contract owner.
+ The missing access control could result in unauthorized changes to the contract configuration, which could cause loss of funds, data, or reputation for the users and the contract owner.
?                                                                                                                                                                                          +
- ## Code Snippet
+ ## Code Snippet
?                +
- https://github.com/sherlock-audit/2023-12-footium/blob/main/footium-eth-shareable/contracts/FootiumPlayer.sol#L85-L116
+ https://github.com/sherlock-audit/2023-12-footium/blob/main/footium-eth-shareable/contracts/FootiumPlayer.sol#L85-L116
?                                                                                                                       +
- ## Tool used
+ ## Tool used
?             +
- - Manual Review
+ - Manual Review
?                +
- ## Test case
+ ## Test case
?             +
- ```solidity 
+ ```solidity 
?             +
- // The contract owner's address
+ // The contract owner's address
?                                +
- address owner = 0x1234;
+ address owner = 0x1234;
?                        +
- // The contract attacker's address
+ // The contract attacker's address
?                                   +
- address attacker = 0x5678;
+ address attacker = 0x5678;
?                           +
- // The contract instance
+ // The contract instance
?                         +
- FootiumPlayer player;
+ FootiumPlayer player;
?                      +
- 
+ 
- // The owner sets the base URI to "https://footium.com/"
+ // The owner sets the base URI to "https://footium.com/"
?                                                         +
- player.setBaseURI("https://footium.com/");
+ player.setBaseURI("https://footium.com/");
?                                           +
- 
+ 
- // The attacker calls the setBaseURI function and changes it to "https://malicious.com/"
+ // The attacker calls the setBaseURI function and changes it to "https://malicious.com/"
?                                                                                         +
- player.setBaseURI("https://malicious.com/");
+ player.setBaseURI("https://malicious.com/");
?                                             +
- 
+ 
- // The attacker calls the setRoyaltyInfo function and changes it to their own address and 100%
+ // The attacker calls the setRoyaltyInfo function and changes it to their own address and 100%
?                                                                                               +
- player.setRoyaltyInfo(attacker, 10000);
+ player.setRoyaltyInfo(attacker, 10000);
?                                        +
- 
+ 
- // The attacker calls the pauseContract function and pauses the contract
+ // The attacker calls the pauseContract function and pauses the contract
?                                                                         +
- player.pauseContract();
+ player.pauseContract();
?                        +
- 
+ 
- ```
+ ```
?    +
- ## logs
+ ## logs
?        +
- ```javascript
+ ```javascript
?              +
- Owner sets base URI to "https://footium.com/"...
+ Owner sets base URI to "https://footium.com/"...
?                                                 +
- Base URI set to "https://footium.com/"...
+ Base URI set to "https://footium.com/"...
?                                          +
- Attacker calls setBaseURI and changes it to "https://malicious.com/"...
+ Attacker calls setBaseURI and changes it to "https://malicious.com/"...
?                                                                        +
- Base URI set to "https://malicious.com/"...
+ Base URI set to "https://malicious.com/"...
?                                            +
- Attacker calls setRoyaltyInfo and changes it to their own address and 100%...
+ Attacker calls setRoyaltyInfo and changes it to their own address and 100%...
?                                                                              +
- Royalty info set to (attacker, 100%)...
+ Royalty info set to (attacker, 100%)...
?                                        +
- Attacker calls pauseContract and pauses the contract...
+ Attacker calls pauseContract and pauses the contract...
?                                                        +
- Contract paused...
+ Contract paused...
?                   +
- 
+ 
- ```
+ ```
?    +
- ## Recommendation
+ ## Recommendation
?                  +
- ```solidity
+ ```solidity
?            +
- // Import the OwnableUpgradeable contract
+ // Import the OwnableUpgradeable contract
?                                          +
- import "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol";
+ import "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol";
?                                                                            +
- 
+ 
- // Inherit from the OwnableUpgradeable contract
+ // Inherit from the OwnableUpgradeable contract
?                                                +
- contract FootiumPlayer is OwnableUpgradeable {
+ contract FootiumPlayer is OwnableUpgradeable {
?                                               +
-   // ...
+   // ...
?         +
- 
+ 
-   // Add the onlyOwner modifier to the setBaseURI function
+   // Add the onlyOwner modifier to the setBaseURI function
?                                                           +
-   function setBaseURI(string calldata baseURI) external onlyOwner {
+   function setBaseURI(string calldata baseURI) external onlyOwner {
?                                                                    +
-     _base = baseURI;
+     _base = baseURI;
?                     +
-   }
+   }
?    +
- 
+ 
-   // Add the onlyOwner modifier to the setRoyaltyInfo function
+   // Add the onlyOwner modifier to the setRoyaltyInfo function
?                                                               +
-   function setRoyaltyInfo(address _receiver, uint96 _royaltyFeePercentage)
+   function setRoyaltyInfo(address _receiver, uint96 _royaltyFeePercentage)
?                                                                           +
-     external
+     external
?             +
-     onlyOwner
+     onlyOwner
?              +
-   {
+   {
?    +
-     _setDefaultRoyalty(_receiver, _royaltyFeePercentage);
+     _setDefaultRoyalty(_receiver, _royaltyFeePercentage);
?                                                          +
-   }
+   }
?    +
- 
+ 
-   // Add the onlyOwner modifier to the activateContract function
+   // Add the onlyOwner modifier to the activateContract function
?                                                                 +
-   function activateContract() external onlyOwner {
+   function activateContract() external onlyOwner {
?                                                   +
-     _unpause();
+     _unpause();
?                +
-   }
+   }
?    +
- 
+ 
-   // Add the onlyOwner modifier to the pauseContract function
+   // Add the onlyOwner modifier to the pauseContract function
?                                                              +
-   function pauseContract() external onlyOwner {
+   function pauseContract() external onlyOwner {
?                                                +
-     _pause();
+     _pause();
?              +
-   }
+   }
?    +
- }
+ }
?  +
- 
+ 
  ```